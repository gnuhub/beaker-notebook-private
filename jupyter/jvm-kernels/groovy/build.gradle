apply plugin: 'application'
apply plugin: 'jacoco'

def final kernelIdName = 'groovy'
def final toReplace = '__PATH__'

mainClassName = 'com.twosigma.beaker.groovy.GroovyKernel'
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
  mavenCentral()
}

project.dependencies{
  compile(project(':kernel-base'))
}

jar {
  manifest { 
    attributes "Main-Class": "$mainClassName"
  }  

  from {
    configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
  } {
    exclude "META-INF/*.SF"
    exclude "META-INF/*.DSA"
    exclude "META-INF/*.RSA"
  }
}

task prepareJson(dependsOn: 'build'){
  doLast {
    println "Prepare JSON for Jupyter notebook"
    println "Copy kernel.json to build/libs/json/ and replasing PATH with groovy.jar parh"
    
    def jarLocation = new File('build/libs/groovy.jar').getAbsolutePath()
    jarLocation = jarLocation.replace("\\","/");
    def text = new File('kernel.json').text.replace(toReplace, jarLocation)
    def folder = new File('build/libs/json')
    if( !folder.exists() ) {
      println "Creating folder build/libs/json"
      folder.mkdirs()
      }
    
    new File('build/libs/json/kernel.json').withWriter { w ->
      w << text
    }
  }
}

task kernelInstall(dependsOn: 'prepareJson'){
  doLast {
    println "Installing Groovier to jupyter totebook"
    
    def hashStdOut = new ByteArrayOutputStream()
    def jsonFolder = new File('build/libs/json/').getAbsolutePath();
    exec {
      commandLine "jupyter",
        "kernelspec",
        "install",
        "--user",
        "--replace",
        "--name",
        kernelIdName,
        jsonFolder;
      standardOutput = hashStdOut
    }
    println hashStdOut.toString().trim();
    println "DONE"
  }
}

jacoco {
  toolVersion = "0.7.8"
}

jacocoTestReport {
  reports {
    html.enabled = true
    xml.enabled = false
    csv.enabled = false
  }
}

test.finalizedBy jacocoTestReport

